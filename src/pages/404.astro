---
import { ClientRouter } from 'astro:transitions';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<!doctype html>
<html lang="en" transition:animate="none">
	<head>
		<BaseHead title="404 - Page Not Found | Mark's Blog" description="Oops! The page you're looking for doesn't exist. Let's help you find your way back." />
		<ClientRouter />
	</head>
	<body>
		<Header />
		<main>
			<div class="container">
				<div class="error-content">
					<div class="error-visual">
						<div class="error-code" id="error-code">
							<span class="digit">4</span>
							<span class="digit">0</span>
							<span class="digit">4</span>
						</div>
						<div class="floating-elements">
							<div class="floating-element">üîç</div>
							<div class="floating-element">üìÑ</div>
							<div class="floating-element">ü§î</div>
							<div class="floating-element">üí´</div>
						</div>
					</div>

					<div class="error-message">
						<h1>Page Not Found</h1>
						<p class="error-description">
							Oops! The page you're looking for doesn't exist. Let's help you find your way back.
						</p>
					</div>

					<div class="helpful-suggestions">
						<h2>Here are some places you might want to check out:</h2>
						<div class="suggestion-grid">
							<a href="/" class="suggestion-card">
								<div class="card-icon">üè†</div>
								<div class="card-content">
									<h3>Home</h3>
									<p>Start fresh from the beginning</p>
								</div>
							</a>
							<a href="/blog" class="suggestion-card">
								<div class="card-icon">üìù</div>
								<div class="card-content">
									<h3>Blog</h3>
									<p>Read my latest thoughts and ideas</p>
								</div>
							</a>
						</div>
					</div>
				</div>
			</div>
		</main>
		<Footer />

		<script is:inline>
			// Animated 404 digits
			function animateDigits() {
				const digits = document.querySelectorAll('.digit');
				digits.forEach((digit, index) => {
					digit.addEventListener('mouseenter', () => {
						digit.style.transform = 'rotateY(360deg) scale(1.2)';
						digit.style.color = 'var(--color-theme-1)';
					});
					
					digit.addEventListener('mouseleave', () => {
						digit.style.transform = 'rotateY(0deg) scale(1)';
						digit.style.color = 'var(--color-theme-2)';
					});
					
					// Random initial animation
					setTimeout(() => {
						digit.style.transform = 'rotateY(360deg)';
						setTimeout(() => {
							digit.style.transform = 'rotateY(0deg)';
						}, 500);
					}, index * 200);
				});
			}

			// Floating elements animation
			function animateFloatingElements() {
				const elements = document.querySelectorAll('.floating-element');
				elements.forEach((element, index) => {
					const randomDelay = Math.random() * 2000;
					const randomDuration = 3000 + Math.random() * 2000;
					
					element.style.animationDelay = randomDelay + 'ms';
					element.style.animationDuration = randomDuration + 'ms';
					
					element.addEventListener('click', () => {
						element.style.transform = 'scale(1.5) rotate(360deg)';
						setTimeout(() => {
							element.style.transform = 'scale(1) rotate(0deg)';
						}, 300);
					});
				});
			}


			// Initialize everything
			document.addEventListener('DOMContentLoaded', () => {
				animateDigits();
				animateFloatingElements();
			});
		</script>
	</body>
</html>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
	}

	.error-content {
		text-align: center;
		padding: 2rem 0;
	}

	.error-visual {
		position: relative;
		margin-bottom: 3rem;
	}

	.error-code {
		display: flex;
		justify-content: center;
		gap: 1rem;
		margin-bottom: 2rem;
		position: relative;
		z-index: 2;
	}

	.digit {
		font-size: 8rem;
		font-weight: 900;
		color: var(--color-theme-2);
		text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
		transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
		cursor: pointer;
		user-select: none;
	}

	.floating-elements {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		pointer-events: none;
		z-index: 1;
	}

	.floating-element {
		position: absolute;
		font-size: 2rem;
		animation: float 4s ease-in-out infinite;
		cursor: pointer;
		pointer-events: all;
		transition: transform 0.3s ease;
	}

	.floating-element:nth-child(1) {
		top: 20%;
		left: 10%;
		animation-delay: 0s;
	}

	.floating-element:nth-child(2) {
		top: 30%;
		right: 15%;
		animation-delay: 1s;
	}

	.floating-element:nth-child(3) {
		bottom: 20%;
		left: 20%;
		animation-delay: 2s;
	}

	.floating-element:nth-child(4) {
		bottom: 30%;
		right: 10%;
		animation-delay: 3s;
	}

	@keyframes float {
		0%, 100% { transform: translateY(0px) rotate(0deg); }
		25% { transform: translateY(-20px) rotate(5deg); }
		50% { transform: translateY(-10px) rotate(-5deg); }
		75% { transform: translateY(-15px) rotate(3deg); }
	}

	.error-message {
		margin-bottom: 3rem;
	}

	.error-message h1 {
		font-size: 3rem;
		color: var(--color-theme-1);
		margin-bottom: 1rem;
		font-family: 'Jost', sans-serif;
	}

	.error-description {
		font-size: 1.25rem;
		color: var(--text-color);
		max-width: 600px;
		margin: 0 auto;
		line-height: 1.6;
	}

	.helpful-suggestions {
		margin-bottom: 3rem;
	}

	.helpful-suggestions h2 {
		color: var(--color-theme-2);
		margin-bottom: 2rem;
		font-size: 1.5rem;
	}

	.suggestion-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 1.5rem;
		max-width: 600px;
		margin: 0 auto;
	}

	.suggestion-card {
		display: flex;
		align-items: center;
		padding: 1.5rem;
		background: var(--bg-color);
		border: 2px solid var(--color-theme-1);
		border-radius: 12px;
		text-decoration: none;
		color: var(--text-color);
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}

	.suggestion-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
		border-color: var(--color-theme-2);
	}

	.card-icon {
		font-size: 2.5rem;
		margin-right: 1rem;
		flex-shrink: 0;
	}

	.card-content h3 {
		margin: 0 0 0.5rem 0;
		color: var(--color-theme-1);
		font-size: 1.25rem;
	}

	.card-content p {
		margin: 0;
		color: var(--text-color);
		opacity: 0.8;
		font-size: 0.95rem;
	}


	/* Responsive design */
	@media (max-width: 768px) {
		.digit {
			font-size: 5rem;
		}

		.error-message h1 {
			font-size: 2rem;
		}

		.error-description {
			font-size: 1.1rem;
		}

		.suggestion-grid {
			grid-template-columns: 1fr;
		}

		.suggestion-card {
			padding: 1rem;
		}

		.card-icon {
			font-size: 2rem;
		}

		.floating-element {
			font-size: 1.5rem;
		}
	}

	@media (max-width: 480px) {
		.container {
			padding: 1rem;
		}

		.digit {
			font-size: 4rem;
		}

		.error-code {
			gap: 0.5rem;
		}
	}
</style>