---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<header>
    <nav role="navigation" aria-label="Main navigation">
        <h2>
            <a href="/" data-astro-reload class="hover-hello">
                {SITE_TITLE}
                <span class="hello">&#129395;</span>
            </a>
        </h2>

        <button class="hamburger" aria-label="Menu" id="hamburger-menu">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
        </button>

        <div class="nav-links" id="nav-links" role="menu" aria-hidden="true">
            <div class="internal-links" role="menubar">
               <a href="/" data-astro-reload class="header-link" role="menuitem">Home</a>
                <HeaderLink href="/blog" role="menuitem">Blog</HeaderLink>
                <HeaderLink href="/feed" role="menuitem">Feed</HeaderLink>
                <HeaderLink href="/links" role="menuitem">Links</HeaderLink>
                <HeaderLink href="/archive" role="menuitem">Archive</HeaderLink>
            </div>

            <div class="social-links">
                <a href="https://github.com/mtoutcalt" target="_blank" aria-label="Visit Mark Outcalt's GitHub profile (opens in new tab)">
                    <span class="sr-only">Go to my GitHub page</span>
                    <svg class="grow-icon" viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
                        <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path>
                    </svg>
                </a>
                <a href="https://mastodon.social/@markoutcalt" rel="me" target="_blank" aria-label="Follow Mark Outcalt on Mastodon (opens in new tab)">
                    <span class="sr-only">Mastodon</span>
                    <svg class="grow-icon" viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
                        <path fill="currentColor" d="M11.19 12.195c2.016-.24 3.77-1.475 3.99-2.603.348-1.778.32-4.339.32-4.339 0-3.47-2.286-4.488-2.286-4.488C12.062.238 10.083.017 8.027 0h-.05C5.92.017 3.942.238 2.79.765c0 0-2.285 1.017-2.285 4.488l-.002.662c-.004.64-.007 1.35.011 2.091.083 3.394.626 6.74 3.78 7.57 1.454.383 2.703.463 3.709.408 1.823-.1 2.847-.647 2.847-.647l-.06-1.317s-1.303.41-2.767.36c-1.45-.05-2.98-.156-3.215-1.928a3.614 3.614 0 0 1-.033-.496s1.424.346 3.228.428c1.103.05 2.137-.064 3.188-.189zm1.613-2.47H11.13v-4.08c0-.859-.364-1.295-1.091-1.295-.804 0-1.207.517-1.207 1.541v2.233H7.168V5.89c0-1.024-.403-1.541-1.207-1.541-.727 0-1.091.436-1.091 1.296v4.079H3.197V5.522c0-.859.22-1.541.66-2.046.456-.505 1.052-.764 1.793-.764.856 0 1.504.328 1.933.983L8 4.39l.417-.695c.429-.655 1.077-.983 1.934-.983.74 0 1.336.259 1.791.764.442.505.661 1.187.661 2.046v4.203z"></path>
                    </svg>
                </a>
                <a href="https://www.farksoflarks.com/rss.xml" target="_blank" aria-label="Subscribe to RSS feed (opens in new tab)">
                    <span class="sr-only">RSS</span>
                    <svg class="grow-icon" viewBox="0 0 490 490" width="32" height="32">
                        <path fill="currentColor" d="M468.2,489.5H20.8C9.4,489.5,0,480.1,0,468.7V21.3C0,9.9,9.4,0.5,20.8,0.5h448.4c11.4,0,20.8,9.4,20.8,20.8v448.4 C489,480.1,479.6,489.5,468.2,489.5z M40.6,448.9h407.8V41.1H40.6V448.9z"/>
                        <path fill="currentColor" d="M260.1,419.8c-11.4,0-20.8-9.4-20.8-20.8c0-77-62.4-139.4-139.4-139.4c-11.4,0-20.8-9.4-20.8-20.8 c0-11.4,9.4-20.8,20.8-20.8c99.9,0,181,81.1,181,181C280.9,410.4,271.5,419.8,260.1,419.8z"/>
                        <path fill="currentColor" d="M347.5,419.8c-11.4,0-20.8-9.4-20.8-20.8c0-124.8-102-227.8-227.8-227.8c-11.4,0-20.8-9.4-20.8-20.8s9.4-20.8,20.8-20.8 c147.7,0,268.4,120.7,268.4,268.4C368.3,410.4,358.9,419.8,347.5,419.8z"/>
                        <path fill="currentColor" d="M173.7,419.8c-11.4,0-20.8-9.4-20.8-20.8c0-29.1-23.9-53.1-53.1-53.1c-11.4,0-20.8-9.4-20.8-20.8 c0-11.4,9.4-20.8,20.8-20.8c52,0,94.7,42.7,94.7,94.7C194.5,410.4,185.2,419.8,173.7,419.8z"/>
                    </svg>
                </a>
            </div>

            {/* --- START: Vanilla Theme Toggle HTML --- */}
            <div class="theme-toggle-wrapper">
                <button
                    id="vanilla-theme-toggle" {/* ID for JS hook */}
                    class="theme-toggle-switch"
                    aria-label="Switch theme" {/* Updated by JS */}
                    title="Switch theme"
                >
                    <div class="toggle-track">
                        <div class="toggle-icon sun-icon">‚òÄÔ∏è</div>
                        <div class="toggle-thumb"></div>
                        <div class="toggle-icon moon-icon">üåô</div>
                    </div>
                </button>
            </div>
            {/* --- END: Vanilla Theme Toggle HTML --- */}

        </div>
    </nav>
    <hr />
</header>

<style>
    header {
        margin: 0;
        padding: 1em;
        background: var(--header-bg);
        color: var(--header-text);
        box-shadow: 0 2px 8px rgba(var(--shadow-color), 5%);
        position: sticky;
        top: 0;
        z-index: 1000;
        transition: all 0.3s ease;
    }

    header.shrink {
        padding: 0.5em;
    }

    h2 {
        margin: 0;
        font-size: 1.5em;
        transition: font-size 0.3s ease;
    }

    header.shrink h2 {
        font-size: 1.2em;
    }

    h2 a,
    h2 a.active {
        text-decoration: none;
    }

    nav {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .nav-links {
        display: flex;
        align-items: center;
        gap: 1em;
    }

    nav a {
        padding: 0.5em 0.5em;
        color: var(--nav-link);
        border-bottom: 4px solid transparent;
        text-decoration: none;
        font-family: 'Jost';
    }

    nav a:hover {
        color: var(--color-theme-1);
    }

    nav a.active {
        text-decoration: none;
        border-bottom-color: var(--color-theme-2);
    }

    .hamburger {
        display: none;
        flex-direction: column;
        justify-content: space-around;
        width: 2rem;
        height: 2rem;
        background: transparent;
        border: none;
        cursor: pointer;
        padding: 0;
        z-index: 10;
    }

    .hamburger-line {
        width: 2rem;
        height: 0.25rem;
        background-color: var(--hamburger-color);
        transition: all 0.3s ease;
        position: relative;
        transform-origin: center;
    }

    /* Shift and rotate to form cross */
    .hamburger.active .hamburger-line:nth-child(1) {
        transform: translateY(0.70rem) rotate(45deg);

    }

    /* Hide middle line */
    .hamburger.active .hamburger-line:nth-child(2) {
        opacity: 0;
    }

    /* Shift and rotate to form cross */
    .hamburger.active .hamburger-line:nth-child(3) {
        transform: translateY(-0.65rem) rotate(-45deg);
    }

    .social-links,
    .social-links a {
        display: flex;
    }

    .grow-icon {
        width: 32px;
        height: 32px;
        transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;
    }

    .grow-icon:hover {
        transform: scale(1.5);
        color: var(--color-theme-1);
    }

    hr {
        border: 0;
        height: 2px;
        background-color: var(--hr-color);
    }

    .hover-hello {
        position: relative;
        display: inline-block;
    }

    .hover-hello .hello {
        position: absolute;
        left: 50%;
        bottom: 60%; /* closer to the text than 100% */
        opacity: 0;
        font-size: 1em;
        z-index: 9999; /* ensure it appears on top */
    }

    .hover-hello:hover .hello {
        opacity: 1;
        animation: bounceIn 0.3s ease forwards;
    }

    @keyframes bounceIn {
        0% {
            transform: translate(-50%, 20px) scale(0.2);
            opacity: 0;
        }
        50% {
            transform: translate(-50%, -10px) scale(1.2);
            opacity: 0.8;
        }
        80% {
            transform: translate(-50%, 0px) scale(0.9);
            opacity: 1;
        }
        100% {
            transform: translate(-50%, -4px) scale(1);
        }
    }


    @media (max-width: 720px) {
        .hamburger {
            display: flex;
        }

        .nav-links {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: var(--header-bg);
            flex-direction: column;
            width: 100%;
            align-items: center;
            padding: 1rem;
            box-shadow: 0 4px 8px rgba(var(--shadow-color), 10%); /* Add shadow for dropdown */
        }

        .nav-links.active {
            display: flex;
        }

        .internal-links {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1rem; /* More space before social links */
            width: 100%; /* Take full width for centering */
        }
         .internal-links a {
            padding: 0.5em 1em; /* Make links easier to tap */
         }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 1.5rem; /* More space for social icons */
            margin-bottom: 0.5rem; /* Space before theme toggle */
            width: 100%;
        }

        /* Ensure theme toggle is centered/positioned well */
        .theme-toggle-wrapper {
            margin-top: 0.5rem;
            margin-right: 0; /* Reset margin if needed */
        }
    }
</style>

<script is:inline>
// Keep the inline script tag, but merge the setup functions

// --- Theme Toggle Click Handler (defined once) ---
let handleToggleClick;

function setupThemeToggle() {
    const toggleButton = document.getElementById('vanilla-theme-toggle');
    if (!toggleButton) return; // Exit if button not found

    handleToggleClick = () => {
        const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        updateToggleButtonLabels(toggleButton, newTheme); // Update labels on click
    };

    // Helper to update ARIA and title
    const updateToggleButtonLabels = (button, theme) => {
         const label = `Switch to ${theme === 'light' ? 'dark' : 'light'} mode`;
         button.setAttribute('aria-label', label);
         button.setAttribute('title', label);
    }

    // Attach listener only if not already attached
    if (!toggleButton.dataset.listenerAttached) {
        toggleButton.addEventListener('click', handleToggleClick);
        toggleButton.dataset.listenerAttached = 'true';
    }

    // Set initial labels after a short delay (for BaseHead script)
    setTimeout(() => {
        const initialTheme = document.documentElement.getAttribute('data-theme') || 'light';
        if (document.getElementById('vanilla-theme-toggle')) { // Check again in case of fast swaps
             updateToggleButtonLabels(document.getElementById('vanilla-theme-toggle'), initialTheme);
        }
    }, 50);
}


// --- Hamburger Menu Logic ---
let handleOutsideClick; // Make accessible for potential cleanup
let handleNavLinkClick; // Make accessible for potential cleanup
const menuLinkSelector = '#nav-links .internal-links a'; // Selector for links

function setupMenu() {
    const hamburger = document.querySelector('#hamburger-menu');
    const navLinks = document.querySelector('#nav-links');
    if (!hamburger || !navLinks) return;

    // Use a flag instead of cloneNode to potentially avoid issues
    if (hamburger.dataset.menuListenerAttached) {
       return; // Avoid re-attaching
    }

    // --- Event Handlers ---
    const toggleMenu = (e) => {
        e.stopPropagation(); // Prevent event from closing menu immediately
        const isExpanded = navLinks.classList.contains('active');
        navLinks.classList.toggle('active');
        hamburger.classList.toggle('active');
        
        // Update ARIA attributes
        hamburger.setAttribute('aria-expanded', !isExpanded);
        navLinks.setAttribute('aria-hidden', isExpanded);
    };

    handleOutsideClick = (e) => {
        const target = e.target;
        // Check if the click is outside the menu AND outside the hamburger button
        if (target instanceof Node && !navLinks.contains(target) && !hamburger.contains(target)) {
            navLinks.classList.remove('active');
            hamburger.classList.remove('active');
            // Update ARIA attributes when menu closes
            hamburger.setAttribute('aria-expanded', 'false');
            navLinks.setAttribute('aria-hidden', 'true');
        }
    };

    handleNavLinkClick = () => {
        navLinks.classList.remove('active');
        hamburger.classList.remove('active');
        // Update ARIA attributes when menu closes
        hamburger.setAttribute('aria-expanded', 'false');
        navLinks.setAttribute('aria-hidden', 'true');
    };

    // --- Attach Listeners ---
    hamburger.addEventListener('click', toggleMenu);
    document.addEventListener('click', handleOutsideClick);

    const internalLinks = navLinks.querySelectorAll(menuLinkSelector);
    internalLinks.forEach(link => {
        link.addEventListener('click', handleNavLinkClick);
    });

    // Mark as attached
    hamburger.dataset.menuListenerAttached = 'true';

    // --- Cleanup Function (Optional but recommended without cloneNode) ---
    // Store handlers on the element for easier removal if needed
    hamburger.menuToggleHandler = toggleMenu;
    document.menuOutsideClickHandler = handleOutsideClick;
    navLinks.menuLinkClickHandler = handleNavLinkClick; // Store on navLinks maybe
    navLinks.menuLinkSelector = menuLinkSelector; // Store selector
}

function cleanupMenuListeners() {
    const hamburger = document.querySelector('#hamburger-menu');
    const navLinks = document.querySelector('#nav-links');

    if (hamburger && hamburger.menuToggleHandler) {
        hamburger.removeEventListener('click', hamburger.menuToggleHandler);
        delete hamburger.dataset.menuListenerAttached; // Allow re-attachment
        delete hamburger.menuToggleHandler;
    }
    if (document.menuOutsideClickHandler) {
         document.removeEventListener('click', document.menuOutsideClickHandler);
         delete document.menuOutsideClickHandler;
    }
    if (navLinks && navLinks.menuLinkClickHandler) {
         const internalLinks = navLinks.querySelectorAll(navLinks.menuLinkSelector);
         internalLinks.forEach(link => {
             link.removeEventListener('click', navLinks.menuLinkClickHandler);
         });
         delete navLinks.menuLinkClickHandler;
         delete navLinks.menuLinkSelector;
    }
}


function runPageScripts() {
    // Always run setup, the functions themselves prevent re-attaching logic
    setupMenu();
    setupThemeToggle();
}


// Initialize on page load
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', runPageScripts);
} else {
    runPageScripts();
}

</script>