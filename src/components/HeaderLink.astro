---
import type { HTMLAttributes } from 'astro/types';

interface LinkProps extends HTMLAttributes<'a'> {
  href?: string;
  class?: string;
}

const { pathname } = new URL(Astro.request.url);
const subpath = pathname.match(/[^/]+/g);

const {
  href = '',
  class: className = '',
  ...rest
} = Astro.props as LinkProps;

const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a
  href={href}
  class:list={[
    className,
    { active: isActive }
  ]}
  {...rest}
>
  <slot />
</a>

<style>
  a {
    position: relative;
    display: inline-block;
    text-decoration: none;
  }

  a::after {
    content: "";
    position: absolute;
    left: 50%;
    bottom: -0.3rem;
    transform: translateX(-50%) scaleX(0);
    transform-origin: center;
    height: 0.25rem;
    width: 100%;
    background-color: var(--color-theme-2);
    transition: transform 0.3s ease;
  }

  a:hover:not(.active)::after {
    transform: translateX(-50%) scaleX(1);
  }

  a.active {
    font-weight: bold;
  }
</style>
